app:
  title: Rosenes Backstage App
  baseUrl: http://localhost:3000
  support:
    url: https://github.com/kartverket/backstage-plugin-risk-scorecard-frontend/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Report an issue
        icon: github
        links:
          - url: https://github.com/kartverket/backstage-plugin-risk-scorecard-frontend/issues
            title: 'Github Issues'

organization:
  name: Rosene

proxy:
  endpoints:
    '/risc-proxy':
      target: http://localhost:8080
      allowedHeaders: ['Authorization', 'GCP-Access-Token']

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin:
      [
        'http://localhost:3000',
        'https://kv-ros-backstage-245zlcbrnq-lz.a.run.app/',
      ]
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'

integrations:
  github:
    - host: github.com
      apps:
        - appId: ${GITHUB_APP_ID}
          privateKey: ${GITHUB_APP_PK}
          clientId: ${GITHUB_APP_CLIENT_ID}
          clientSecret: ${GITHUB_APP_CLIENT_SECRET}
          webhookSecret: ${GITHUB_APP_WEBHOOK_SECRET}

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'local' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

auth:
  environment: development
  providers:
    microsoft:
      development:
        clientId: ${AZURE_CLIENT_ID}
        clientSecret: ${AZURE_CLIENT_SECRET}
        tenantId: ${AZURE_TENANT_ID}
        domainHint: ${AZURE_TENANT_ID}
        signIn:
          resolvers:
            - resolver: emailMatchingUserEntityAnnotation
            - resolver: emailMatchingUserEntityProfileEmail
            - resolver: emailLocalPartMatchingUserEntityName

    google:
      development:
        clientId: ${GOOGLE_CLIENT_ID}
        clientSecret: ${GOOGLE_CLIENT_SECRET}

scaffolder: {}

catalog:
  rules:
    - allow: [Component, Group, User, Resource, Location, Template, System]
  providers:
    github:
      spire-test:
        organization: 'spire-test'
        catalogPath: '.security/catalog-info.yaml'
        filters:
          branch: 'main'
          repository: '^kv-ros-.*$'
        schedule:
          frequency: { minutes: 1440 }
          timeout: { minutes: 3 }

    microsoftGraphOrg:
      development:
        tenantId: ${AZURE_TENANT_ID}
        domainHint: ${AZURE_TENANT_ID}
        clientId: ${AZURE_CLIENT_ID}
        clientSecret: ${AZURE_CLIENT_SECRET}
        userGroupMember:
          filter: displayName eq 'Spire-ros'
        group:
          filter: >
            displayName eq 'Spire-ros'
        schedule:
          frequency: PT1H
          timeout: PT50M
