app:
  title: Spire RiSc Backstage
  baseUrl: http://localhost:3000

  support:
    url: https://kartverketgroup.slack.com/archives/C075KCPTURY
    items: # Used by common SupportButton component
      - title: RISC Feedback Channel
        icon: chat
        links:
          - url: https://kartverketgroup.slack.com/archives/C075KCPTURY
            title: '#koden√¶r-ros-tilbakemelding'
      - title: RISC Documentation
        icon: article
        links:
          - url: https://kartverket.atlassian.net/wiki/spaces/SIK/pages/1176142023/Koden+r+RoS
            title: Confluence - RISC

organization:
  name: Spire

backend:
  # Used for enabling authentication, secret is shared by all backend plugins
  # See https://backstage.io/docs/auth/service-to-service-auth for
  # information on the format
  # auth:
  #   keys:
  #     - secret: ${BACKEND_SECRET}
  baseUrl: http://localhost:7007
  listen:
    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    # host: 127.0.0.1
  csp:
    connect-src: ["'self'", 'http:', 'https:']
    img-src: ["'self'", 'data:', 'imgs.xkcd.com']
    frame-src:
      [
        'fedifeed.com',
      ]
    # unsafe-eval is required by backstage
    # unsafe-inline is required by the lighthouse iframe
    script-src:
      [
        "'self'",
        "'unsafe-eval'",
        "'unsafe-inline'",
      ]
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml

permission:
  enabled: false

### Add a proxy endpoint for the frontend.
### A typical reason to do this is to handle HTTPS and CORS for internal services.
proxy:
  endpoints:
    '/risc-proxy':
      target: http://localhost:8080
      allowedHeaders: ['Authorization', 'GCP-Access-Token', 'GitHub-Access-Token']

scaffolder:
  defaultAuthor:
    name: 'Backstage'
    email: 'hakon.froland@kartverket.no'
  defaultCommitMessage: 'Test'

catalog:
  orphanStrategy: delete
  rules:
    - allow: [Component, Group, User, Resource, Location, System, API, Domain]
  providers:
    github:
      providerId:
        organization: 'spire-test'
        catalogPath: '.security/catalog-info.yaml' # string
        validateLocationsExist: true
        filters:
          repository: '.*' # Regex
        schedule: # same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 30 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }

  # Is unified alerting enabled in Grafana?
  # See: https://grafana.com/blog/2021/06/14/the-new-unified-alerting-system-for-grafana-everything-you-need-to-know/
  # Optional. Default: false
  unifiedAlerting: true