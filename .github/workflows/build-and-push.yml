name: Push to Google Artifact Registry

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ 'main' ]

env:
  IMAGE_NAME: ${{ github.repository }}
  PROJECT_ID: 'spire-ros-5lmr'
  AR_REPO_LOCATION: 'europe-north1'
  AR_URL: 'europe-north1-docker.pkg.dev/spire-ros-5lmr/risc-plugin'
  SERVICE_ACCOUNT: 'risc-plugin-github-actions@spire-ros-5lmr.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/457384642040/locations/global/workloadIdentityPools/github-actions-pool/providers/github'

defaults:
  run:
    shell: bash

jobs:
  push_to_ar:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: auth
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker ${{ env.AR_REPO_LOCATION }}-docker.pkg.dev --quiet

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - run: corepack enable

      - run: yarn install --immutable

      # tsc outputs type definitions to dist-types/ in the repo root, which are then consumed by the build
      - run: yarn tsc

      # Build the backend, which bundles it all up into the packages/backend/dist folder.
      # The configuration files here should match the one you use inside the Dockerfile below.
      - run: yarn build:backend --config ../../app-config.yaml --config ../../app-config.production.yaml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Build the Docker image
        run: |
          docker build -f packages/backend/Dockerfile -t "${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" .

      - name: Push the Docker image to Google Artifact Registry
        run: |
          docker push "${{ env.AR_URL }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"

