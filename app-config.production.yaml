app:
  baseUrl: https://kv-ros-backstage-245zlcbrnq-lz.a.run.app

backend:
  baseUrl: https://kv-ros-backstage-245zlcbrnq-lz.a.run.app
  listen:
    port: 7007
  csp:
    connect-src: [ "'self'", 'http:', 'https:' ]
  cors:
    origin: [ 'https://kv-ros-backstage-245zlcbrnq-lz.a.run.app/' ]
    methods: [ GET, HEAD, PATCH, POST, PUT, DELETE ]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'
  auth:
    keys:
      - secret: ${BACKEND_AUTH_KEY}

proxy:
  endpoints:
    '/risc-proxy':
      target: https://kv-ros-backend-245zlcbrnq-lz.a.run.app
      allowedHeaders: ['Authorization', 'GCP-Access-Token']

auth:
  environment: development
  providers:
    microsoft:
      development:
        clientId: ${AZURE_CLIENT_ID}
        clientSecret: ${AZURE_CLIENT_SECRET}
        tenantId: ${AZURE_TENANT_ID}
        domainHint: ${AZURE_TENANT_ID}
        additionalScopes:
          - Mail.Send
        signIn:
          resolvers:
            - resolver: emailMatchingUserEntityAnnotation
            - resolver: emailMatchingUserEntityProfileEmail
            - resolver: emailLocalPartMatchingUserEntityName
    
    google:
      development:
        clientId: ${GOOGLE_CLIENT_ID}
        clientSecret: ${GOOGLE_CLIENT_SECRET}

catalog:
  providers:
    github:
      spire-test:
        organization: 'spire-test'
        catalogPath: '.security/catalog-info.yaml'
        filters:
          branch: 'main'
          repository: '^kv-ros-.*$'
        schedule:
          frequency: { minutes: 1440 }
          timeout: { minutes: 3 }
    
    microsoftGraphOrg:
      development:
        tenantId: ${AZURE_TENANT_ID}
        domainHint: ${AZURE_TENANT_ID}
        clientId: ${AZURE_CLIENT_ID}
        clientSecret: ${AZURE_CLIENT_SECRET}
        userGroupMember:
          filter: displayName eq 'Spire-ros'
        group:
          filter: >
            displayName eq 'Spire-ros'
        schedule:
          frequency: PT1H
          timeout: PT50M